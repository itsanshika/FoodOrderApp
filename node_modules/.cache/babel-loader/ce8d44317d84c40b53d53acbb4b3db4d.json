{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshi\\\\Desktop\\\\React\\\\FoodApp_01\\\\src\\\\store_context\\\\cartProvider.js\",\n    _s = $RefreshSig$();\n\n//this file manages the cart-context\nimport React, { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === 'ADDITEM') {\n    const updatingItems = state.items.concat(); //concat is a javascript funtion which add the item into array and return new array.unlike puhsing items in the existing array.\n  }\n\n  return defaultCart;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartfun] = useReducer(cartReducer, defaultCart);\n\n  function addItemHandler(item) {\n    dispatchCartfun({\n      type: \"ADDITEM\",\n      items: item\n    });\n  }\n\n  function removeItemHandler(id) {\n    dispatchCartfun({\n      type: \"REMOVE\",\n      item_id: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItm: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n} //any component wrapped with this Cartprovider will get access to this CartContext data.As Cart Provider is a Provider which have access to context to all of  its childerns.\n\n\n_s(CartProvider, \"GI9/CD33e8rYlsNEeYk/KDCM+38=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/anshi/Desktop/React/FoodApp_01/src/store_context/cartProvider.js"],"names":["React","useReducer","CartContext","defaultCart","items","totalAmount","cartReducer","state","action","type","updatingItems","concat","CartProvider","props","cartState","dispatchCartfun","addItemHandler","item","removeItemHandler","id","item_id","cartContext","addItem","removeItm","children"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,WAAW,GAAC;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdC,EAAAA,WAAW,EAAC;AAFE,CAAlB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EACA;AACA,MAAGA,MAAM,CAACC,IAAP,KAAc,SAAjB,EACA;AACG,UAAMC,aAAa,GAACH,KAAK,CAACH,KAAN,CAAYO,MAAZ,EAApB,CADH,CAC2C;AAC1C;;AAEG,SAAOR,WAAP;AACH;;AAED,SAASS,YAAT,CAAsBC,KAAtB,EACA;AAAA;;AACA,QAAM,CAACC,SAAD,EAAWC,eAAX,IAA6Bd,UAAU,CAACK,WAAD,EAAaH,WAAb,CAA7C;;AAGA,WAASa,cAAT,CAAwBC,IAAxB,EACA;AACIF,IAAAA,eAAe,CAAC;AAACN,MAAAA,IAAI,EAAC,SAAN;AAAgBL,MAAAA,KAAK,EAACa;AAAtB,KAAD,CAAf;AAEH;;AACD,WAASC,iBAAT,CAA2BC,EAA3B,EACA;AACIJ,IAAAA,eAAe,CAAC;AAACN,MAAAA,IAAI,EAAC,QAAN;AAAeW,MAAAA,OAAO,EAACD;AAAvB,KAAD,CAAf;AACH;;AAED,QAAME,WAAW,GAAC;AACdjB,IAAAA,KAAK,EAACU,SAAS,CAACV,KADF;AAEdC,IAAAA,WAAW,EAACS,SAAS,CAACT,WAFR;AAGdiB,IAAAA,OAAO,EAAEN,cAHK;AAIdO,IAAAA,SAAS,EAAEL;AAJG,GAAlB;AAOE,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGG,WAA9B;AAAA,cACFR,KAAK,CAACW;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,C,CAED;;;GA3BSZ,Y;;KAAAA,Y;AA4BT,eAAeA,YAAf","sourcesContent":["//this file manages the cart-context\r\nimport React, { useReducer } from 'react';\r\nimport CartContext from './Cart-context';\r\n\r\nconst defaultCart={\r\n    items: [],\r\n    totalAmount:0\r\n}\r\n\r\nfunction cartReducer(state,action)\r\n{\r\nif(action.type==='ADDITEM')\r\n{\r\n   const updatingItems=state.items.concat()//concat is a javascript funtion which add the item into array and return new array.unlike puhsing items in the existing array.\r\n}\r\n\r\n    return defaultCart;\r\n}\r\n\r\nfunction CartProvider(props)\r\n{\r\nconst [cartState,dispatchCartfun]= useReducer(cartReducer,defaultCart);\r\n\r\n\r\nfunction addItemHandler(item)\r\n{\r\n    dispatchCartfun({type:\"ADDITEM\",items:item})\r\n\r\n}\r\nfunction removeItemHandler(id)\r\n{\r\n    dispatchCartfun({type:\"REMOVE\",item_id:id})\r\n}\r\n\r\nconst cartContext={\r\n    items:cartState.items,\r\n    totalAmount:cartState.totalAmount,\r\n    addItem: addItemHandler ,\r\n    removeItm: removeItemHandler\r\n}\r\n\r\n  return <CartContext.Provider value ={cartContext}>\r\n      {props.children}\r\n  </CartContext.Provider>\r\n}\r\n\r\n//any component wrapped with this Cartprovider will get access to this CartContext data.As Cart Provider is a Provider which have access to context to all of  its childerns.\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}