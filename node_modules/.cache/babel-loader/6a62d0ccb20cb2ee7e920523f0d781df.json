{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshi\\\\Desktop\\\\React\\\\FoodApp_01\\\\src\\\\components\\\\Meals\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./MealItemForm.module.css\";\nimport Input from \"../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MealItemForm(props) {\n  _s();\n\n  const inputAmount = useRef();\n  const [error, setError] = useState(false); // valid to add in cart\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const enteredAmount = inputAmount.current.value; //Ref always return value in form of string hence + is added in strating in ordervto convert it into number.\n\n    const enteredAmountNumber = +enteredAmount; // console.log(enteredAmount+1);\n\n    if (enteredAmount.trim().length === 0 || enteredAmount < 1 || enteredAmount > 50) {\n      setError(true);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.plus,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      ref: inputAmount,\n      label: \"Amount\",\n      input: {\n        type: \"number\",\n        id: \"amount_\" + props.id,\n        min: \"1\",\n        max: \"50\",\n        step: \"1\",\n        defaultValue: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.minus,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a Valid Amount (1-50)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MealItemForm, \"OihcCceUaS5M5p3jykP0brv81QM=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["C:/Users/anshi/Desktop/React/FoodApp_01/src/components/Meals/MealItemForm.js"],"names":["React","useRef","useState","classes","Input","MealItemForm","props","inputAmount","error","setError","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","plus","type","id","min","max","step","defaultValue","minus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAMC,WAAW,GAAGN,MAAM,EAA1B;AACF,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,KAAD,CAA/B,CAF6B,CAEU;;AACrC,WAASQ,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGN,WAAW,CAACO,OAAZ,CAAoBC,KAA1C,CAH4B,CAGqB;;AACjD,UAAMC,mBAAmB,GAAC,CAACH,aAA3B,CAJ4B,CAK5B;;AACA,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAL,aAAa,GAAG,CADhB,IAEAA,aAAa,GAAG,EAHlB,EAIE;AACAJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACD;;AACDH,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AAED;;AAED,sBACE;AAAM,IAAA,SAAS,EAAEb,OAAO,CAACiB,IAAzB;AAA+B,IAAA,QAAQ,EAAEV,aAAzC;AAAA,4BAGE;AAAQ,MAAA,SAAS,EAAEP,OAAO,CAACkB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEd,WADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLe,QAAAA,IAAI,EAAE,QADD;AAELC,QAAAA,EAAE,EAAE,YAAYjB,KAAK,CAACiB,EAFjB;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,IAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YAJF,eAkBE;AAAQ,MAAA,SAAS,EAAExB,OAAO,CAACyB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAoBGpB,KAAK,iBAAI;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YApBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7CQH,Y;;KAAAA,Y;AA8CT,eAAeA,YAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../UI/Input\";\r\n\r\nfunction MealItemForm(props) {\r\n  const inputAmount = useRef();\r\nconst [error,setError]=useState(false);// valid to add in cart\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = inputAmount.current.value; //Ref always return value in form of string hence + is added in strating in ordervto convert it into number.\r\n    const enteredAmountNumber=+enteredAmount;\r\n    // console.log(enteredAmount+1);\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmount < 1 ||\r\n      enteredAmount > 50\r\n    ) {\r\n      setError(true);\r\n      return;\r\n    }\r\n    props.onAddToCart(enteredAmountNumber);\r\n    \r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n\r\n\r\n      <button className={classes.plus}>+</button>\r\n      <Input\r\n        ref={inputAmount}\r\n        label=\"Amount\"\r\n        input={{\r\n          type: \"number\",\r\n          id: \"amount_\" + props.id,\r\n          min: \"1\",\r\n          max: \"50\",\r\n          step: \"1\",\r\n          defaultValue: \"0\",\r\n        }}\r\n      />\r\n      {/* double curly braces: ont to read the JSX element and other because passed input is an object */}\r\n\r\n      <button className={classes.minus}>-</button>\r\n\r\n      {error && <div><p>Please Enter a Valid Amount (1-50)</p></div>}\r\n    </form>\r\n  );\r\n}\r\nexport default MealItemForm;\r\n"]},"metadata":{},"sourceType":"module"}