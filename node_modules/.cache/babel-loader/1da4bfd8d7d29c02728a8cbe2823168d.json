{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshi\\\\Desktop\\\\React\\\\FoodApp_01\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Model from \"../UI/Model\";\nimport CartContext from \"../../store_context/Cart-context\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n\n  function addOnHandler(item) {\n    // cartCtx.addItem(item);\n    const alreadyExist = cartCtx.items.findIndex(item.id);\n    const existingItem = cartCtx.items[alreadyExist];\n    console.log({\n      existingItem\n    });\n  }\n\n  function removeOnHandler(id) {//cartCtx.removeIetm(id);\n  }\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: addOnHandler.bind(null, item) //bind s used to pass data to those function\n      ,\n      onRemove: removeOnHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Model, {\n    onClose: props.onCartShow,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [\"Total Amount\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `$${cartCtx.totalAmount.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"buttons--alt\"],\n        onClick: props.onCartShow,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), cartCtx.items.length !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/anshi/Desktop/React/FoodApp_01/src/components/Cart/Cart.js"],"names":["React","useContext","classes","Model","CartContext","CartItem","Cart","props","cartCtx","addOnHandler","item","alreadyExist","items","findIndex","id","existingItem","console","log","removeOnHandler","cartItems","map","name","amount","price","bind","onCartShow","total","totalAmount","toFixed","actions","length","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;;AAEA,WAASK,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B;AACJ,UAAMC,YAAY,GAACH,OAAO,CAACI,KAAR,CAAcC,SAAd,CAAwBH,IAAI,CAACI,EAA7B,CAAnB;AACA,UAAMC,YAAY,GAAEP,OAAO,CAACI,KAAR,CAAcD,YAAd,CAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AAGG;;AACD,WAASG,eAAT,CAAyBJ,EAAzB,EAA6B,CAC3B;AACD;;AAED,QAAMK,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEjB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGM,OAAO,CAACI,KAAR,CAAcQ,GAAd,CAAmBV,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACW,IAFb;AAGE,MAAA,MAAM,EAAEX,IAAI,CAACY,MAHf;AAIE,MAAA,KAAK,EAAEZ,IAAI,CAACa,KAJd;AAKE,MAAA,KAAK,EAAEd,YAAY,CAACe,IAAb,CAAkB,IAAlB,EAAwBd,IAAxB,CALT,CAKwC;AALxC;AAME,MAAA,QAAQ,EAAEQ,eAAe,CAACM,IAAhB,CAAqB,IAArB,EAA2Bd,IAAI,CAACI,EAAhC;AANZ,OACOJ,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEP,KAAK,CAACkB,UAAtB;AAAA,eACGN,SADH,eAEE;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACwB,KAAxB;AAAA,8CAEE;AAAA,kBAAQ,IAAGlB,OAAO,CAACmB,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAE1B,OAAO,CAAC2B,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE3B,OAAO,CAAC,cAAD,CAA1B;AAA4C,QAAA,OAAO,EAAEK,KAAK,CAACkB,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGjB,OAAO,CAACI,KAAR,CAAckB,MAAd,KAAyB,CAAzB,iBACC;AAAQ,QAAA,SAAS,EAAE5B,OAAO,CAAC6B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA/CQzB,I;;KAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Model from \"../UI/Model\";\r\nimport CartContext from \"../../store_context/Cart-context\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nfunction Cart(props) {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  function addOnHandler(item) {\r\n    // cartCtx.addItem(item);\r\nconst alreadyExist=cartCtx.items.findIndex(item.id);\r\nconst existingItem= cartCtx.items[alreadyExist];\r\nconsole.log({existingItem});\r\n\r\n\r\n  }\r\n  function removeOnHandler(id) {\r\n    //cartCtx.removeIetm(id);\r\n  }\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onAdd={addOnHandler.bind(null, item)} //bind s used to pass data to those function\r\n          onRemove={removeOnHandler.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <Model onClose={props.onCartShow}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        Total Amount\r\n        <span>{`$${cartCtx.totalAmount.toFixed(2)}`}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"buttons--alt\"]} onClick={props.onCartShow}>\r\n          Close\r\n        </button>\r\n        {cartCtx.items.length !== 0 && (\r\n          <button className={classes.button}>Order</button>\r\n        )}\r\n      </div>\r\n    </Model>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}